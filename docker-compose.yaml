# docker compose up -d redis mongodb mysql postgres rabbitmq elasticsearch kibana
version: '3.9'
services:
  redis:
    container_name: redis_container
    image: redis:alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --loglevel warning
    volumes:
      - ./docker-volumes/cache:/data
  mongodb:
    container_name:  mongodb_container
    image: mongodb:latest
    restart: always
    ports:
      - 27017:27017
    volumes:
      - ./docker-volumes/data:/data/db

  mysql:
    container_name: mysql_container
    image: mysql:latest
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      - MYSQL_USER=jobber
      - MYSQL_DATABASE=jobber_auth
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_PASSWORD=password
    ports:
      - '3306:3306'
    volumes:
      - ./docker-volumes/mysql:/var/lib/mysql

  postgres:
    container_name: postgres_container
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=jobber
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=jobber_reviews
    ports:
      - '5432:5432'
    volumes:
      - ./docker-volumes/postgres:/var/lib/postgresql

  rabbitmq:
    container_name: rabbitmq_container
    image: rabbitmq:3.13-rc-management-alpine
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=jobber
      - RABBITMQ_DEFAULT_PASS=jobberpass
    ports:
      # AMQP protocol port
      - '5672:5672'
      # Management UI
      - '15672:15672'

  elasticsearch:
    container_name: elasticsearch_container
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    restart: always
    environment:
      ES_JAVA_OPTS: -Xmx1g -Xms1g
      bootstrap.memory_lock: "true"
      discovery.type: single-node
      network.host: 0.0.0.0
      transport.host: 127.0.0.1
      http.host: 0.0.0.0
      xpack.security.enabled: "true"
      xpack.security.authc.api_key.enabled: "true"
      xpack.monitoring.collection.enabled: "true"
      xpack.security.enrollment.enabled: "true"
      xpack.security.authc.token.enabled: "true"
      ELASTIC_PASSWORD: admin1234
    ports:
      - 9300:9300
      - 9200:9200
    volumes:
      - ./docker-volumes/elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - elastic
  
  kibana:
    container_name: kibana_container
    image: docker.elastic.co/kibana/kibana:8.11.0
    restart: always
    environment:
      - ELASTICSEARCH_HOSTS=["http://elasticsearch_container:9200"]
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=kibana
      - ELASTICSEARCH_SERVICEACCOUNT_TOKEN=AAEAAWVsYXN0aWMva2liYW5hL2pvYmJlci1raWJhbmE6N3BWZ0ItZWxSY21wMEJ0Y3ZKNTlHZw
      - XPACK_FLEET_AGENTS_ELASTICSEARCH_HOSTS=["http://elasticsearch_container:9200"]
    ports:
      - 5601:5601
    networks:
      - elastic
    volumes:
      - ./kibana.yml/:/usr/share/kibana/config/kibana.yml:ro
    depends_on: 
      - elasticsearch

  # apmServer:
  #   image: docker.elastic.co/apm/apm-server:8.11.0
  #   container_name: apm_server_container
  #   ports:
  #     - 8200:8200
  #   volumes:
  #     - ./apm-server.yml:/usr/share/apm-server/apm-server.yml:ro
  #   networks:
  #     - elastic
  #   command: >
  #     apm-server -e
  #       -E apm-server.rum.enabled=true
  #       -E setup.kibana.host=kibana_container:5601
  #       -E setup.template.settings.index.number_of_replicas=0
  #       -E apm-server.kibana.enabled=true
  #       -E apm-server.kibana.host=kibana_container:5601
  #       -E apm-server.kibana.protocol=http
  #       -E strict.perms=false
  #       -E apm-server.auth.anonymous.enabled=true
  
  # metricbeat:
  #   container_name: metricbeat_container
  #   image: docker.elastic.co/beats/metricbeat:8.11.0
  #   user: root
  #   ports:
  #     - 5066:5066
  #   networks:
  #     - elastic
  #   volumes:
  #     - ./metricbeat.yml/:/usr/share/metricbeat/metricbeat.yml:ro
  #     # docker module
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #     # system module
  #     - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
  #     - /proc:/hostfs/proc:ro
  #     - /:/hostfs:ro
  #   command: ["--strict.perms=false", "-system.hostfs=/hostfs"]
  #   depends_on: 
  #     - elasticsearch

  # heartbeat:
  #   container_name: heartbeat_container
  #   image: docker.elastic.co/beats/heartbeat:8.11.0
  #   user: root
  #   hostname: heartbeat
  #   cap_add:
  #     - NET_RAW
  #   networks:
  #     - elastic
  #   command: ["--strict.perms=false"]
  #   volumes:
  #     - ./heartbeat.yml:/usr/share/heartbeat/heartbeat.yml:ro
  #   depends_on: 
  #     - elasticsearch

networks:
  elastic:
    name: elastic